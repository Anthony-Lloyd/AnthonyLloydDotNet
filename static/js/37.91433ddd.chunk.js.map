{"version":3,"file":"static/js/37.91433ddd.chunk.js","mappings":"kMAiFA,UAzE2B,WACzB,IAAAA,GAAgCC,EAAAA,EAAAA,UAAgB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAoC5B,OAlCAI,EAAAA,EAAAA,YAAU,WACRC,MANY,iGAOTC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACL,IAAMC,EAAWD,EAAKE,MAAM,OAAOC,KAAI,SAAAC,GACrC,IAAMC,EAAW,IAAIC,EAAAA,GAAOC,SACxBC,EAAQ,GAAIC,EAAU,GAAIC,EAAW,GAAIC,EAAS,GAEtDN,EAASO,QAAU,SAACb,GAAyB,OAAdS,EAAQT,EAAa,EAAI,EACxDM,EAASQ,KAAO,SAACC,EAAMN,EAAOT,GAG5B,OAFAU,EAAUK,EACVJ,EAAWX,EACJ,EACT,EACAM,EAASU,MAAQ,SAACD,EAAMN,EAAOT,GAE7B,OADAY,EAASG,EACF,EACT,EAEA,IAAME,GAAcV,EAAAA,EAAAA,IAAOF,EAAQa,OAAQ,CAAEZ,SAAAA,IAE7C,MAAO,CACLG,MAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,OAAAA,EACAK,YAAAA,EAEJ,IAEAtB,EAAYO,EACd,GACJ,GAAG,IAGDiB,IAAAA,cAAA,WAASC,UAAU,0BAA0BC,GAAG,YAC9CF,IAAAA,cAAA,OAAKC,UAAU,aACbD,IAAAA,cAAA,OAAKC,UAAU,mCACbD,IAAAA,cAAA,OAAKC,UAAU,wBACbD,IAAAA,cAAA,MAAIC,UAAU,aAAY,cAI9BD,IAAAA,cAAA,OAAKC,UAAU,OACZ1B,EAASU,KAAI,SAACkB,EAASC,GAAK,OAC3BJ,IAAAA,cAAA,OAAKK,IAAKD,EAAOH,UAAU,0BACzBD,IAAAA,cAAA,OAAKC,UAAU,0CACbD,IAAAA,cAAA,OAAKC,UAAU,aACbD,IAAAA,cAAA,MAAIC,UAAU,cAAcE,EAAQb,OACnCa,EAAQX,SAASc,SAAS,WACzBN,IAAAA,cAAA,OAAKC,UAAU,2CACbD,IAAAA,cAAA,UAAQV,MAAOa,EAAQb,MAAOW,UAAU,wBAAwBM,IAAG,iCAAAC,OAAmCL,EAAQZ,QAAQP,MAAM,MAAM,IAAMyB,iBAAe,KAIzJT,IAAAA,cAAA,KAAGJ,KAAMO,EAAQZ,QAASmB,OAAO,SAASC,IAAI,uBAC5CX,IAAAA,cAAA,OAAKO,IAAKJ,EAAQV,OAAQmB,IAAKT,EAAQb,MAAOW,UAAU,eAG5DD,IAAAA,cAAA,OAAKC,UAAU,OAAOY,wBAAyB,CAAEC,OAAQX,EAAQL,iBAGjE,MAMlB,C,gDC9EA,WAAiB,C","sources":["pages/Projects.tsx","pages/styles/projects.css"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { marked } from 'marked'; \r\nimport '../index.css';\r\nimport './styles/projects.css';\r\n\r\n\r\nconst tofetch = 'https://raw.githubusercontent.com/Anthony-Lloyd02/AnthonyLloydDotNet/main/public/proj/proj.md';\r\n\r\nconst Projects: React.FC = () => {\r\n  const [projects, setProjects] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch(tofetch)\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        const sections = data.split('---').map(section => {\r\n          const renderer = new marked.Renderer();\r\n          let title = '', linkUrl = '', linkText = '', imgUrl = '';\r\n\r\n          renderer.heading = (text) => { title = text; return ''; };\r\n          renderer.link = (href, title, text) => {\r\n            linkUrl = href;\r\n            linkText = text;\r\n            return '';\r\n          };\r\n          renderer.image = (href, title, text) => {\r\n            imgUrl = href;\r\n            return '';\r\n          };\r\n\r\n          const htmlContent = marked(section.trim(), { renderer });\r\n\r\n          return {\r\n            title,\r\n            linkUrl,\r\n            linkText,\r\n            imgUrl,\r\n            htmlContent\r\n          };\r\n        });\r\n\r\n        setProjects(sections);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"bg-light text-dark py-5\" id=\"Projects\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mb-5\">\r\n          <div className=\"col-lg-8 text-center\">\r\n            <h2 className=\"display-4\">Projects</h2>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"row\">\r\n          {projects.map((project, index) => (\r\n            <div key={index} className=\"col-lg-6 col-xl-4 mb-4\">\r\n              <div className=\"card bg-light text-dark border-0 h-100\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"card-title\">{project.title}</h3>\r\n                  {project.linkText.includes(\"YouTube\") ? (\r\n                    <div className=\"embed-responsive embed-responsive-16by9\">\r\n                      <iframe title={project.title} className=\"embed-responsive-item\" src={`https://www.youtube.com/embed/${project.linkUrl.split('v=')[1]}`} allowFullScreen></iframe>\r\n                    </div>\r\n                  ) : (\r\n                    // Render the clickable image fetched from the markdown for blog posts\r\n                    <a href={project.linkUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      <img src={project.imgUrl} alt={project.title} className=\"img-fluid\" />\r\n                    </a>\r\n                  )}\r\n                  <div className=\"mt-3\" dangerouslySetInnerHTML={{ __html: project.htmlContent }} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_useState","useState","_useState2","_slicedToArray","projects","setProjects","useEffect","fetch","then","response","text","data","sections","split","map","section","renderer","marked","Renderer","title","linkUrl","linkText","imgUrl","heading","link","href","image","htmlContent","trim","React","className","id","project","index","key","includes","src","concat","allowFullScreen","target","rel","alt","dangerouslySetInnerHTML","__html"],"sourceRoot":""}