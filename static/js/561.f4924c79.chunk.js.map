{"version":3,"file":"static/js/561.f4924c79.chunk.js","mappings":"+KA6CA,UA1CiC,WAC7B,IAAAA,GAAuCC,EAAAA,EAAAA,eAA/BC,EAAUF,EAAVE,WAAYC,EAAcH,EAAdG,eACpBC,GAAkCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAGxBI,EAAe,OAAAC,OAAUT,EAAa,WAAa,aAKnDU,EAAkB,8BAExB,OACIC,IAAAA,cAAA,OAAKC,UAAU,6CACVN,EACGK,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,UACIE,QAASZ,EACTW,UAAS,GAAAH,OAAKD,EAAe,KAAAC,OAAIC,IAEhCV,EAAa,uBAAyB,uBAE3CW,IAAAA,cAAA,UACIE,QAAS,kBAAMN,GAAa,EAAM,EAClCK,UAAS,GAAAH,OAlBD,oBAkByB,KAAAA,OAAIC,EAAe,UACvD,SAKLC,IAAAA,cAAA,UACIE,QAAS,kBAAMN,GAAa,EAAK,EACjCK,UAzBQ,yBA0BRE,MAAM,yBACT,QAMjB,C","sources":["pages/_DarkModeToggle.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDarkMode } from './_DarkModeContext';\n\nconst DarkModeToggle: React.FC = () => {\n    const { isDarkMode, toggleDarkMode } = useDarkMode();\n    const [isVisible, setIsVisible] = useState(true);\n\n    // Define the base classes for the buttons\n    const buttonBaseClass = `btn ${isDarkMode ? 'btn-dark' : 'btn-light'}`;\n    const hideButtonBaseClass = 'btn btn-secondary';\n    const showButtonClass = 'btn btn-sm btn-primary';\n\n    // Add responsive classes for mobile view\n    const responsiveClass = 'btn-block d-md-inline-block'; // 'btn-block' for xs to md screens, 'd-md-inline-block' for md and larger screens\n\n    return (\n        <div className=\"position-fixed bottom-0 right-0 mb-3 mr-3\">\n            {isVisible ? (\n                <>\n                    <button \n                        onClick={toggleDarkMode}\n                        className={`${buttonBaseClass} ${responsiveClass}`}\n                    >\n                        {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n                    </button>\n                    <button \n                        onClick={() => setIsVisible(false)}\n                        className={`${hideButtonBaseClass} ${responsiveClass} ml-2`}\n                    >\n                        Hide\n                    </button>\n                </>\n            ) : (\n                <button \n                    onClick={() => setIsVisible(true)}\n                    className={showButtonClass}\n                    title=\"Show Dark Mode Toggle\"\n                >\n                    Show\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default DarkModeToggle;\n"],"names":["_useDarkMode","useDarkMode","isDarkMode","toggleDarkMode","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","buttonBaseClass","concat","responsiveClass","React","className","onClick","title"],"sourceRoot":""}