{"version":3,"file":"static/js/638.169854e5.chunk.js","mappings":"qNA+EA,G,QAzEyB,WACrB,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAsCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,IAElCG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAcC,OAAOC,SAASC,KAAKC,UAAU,GACnDV,EAAcM,GAAe,QAE7B,IAAMK,EAAmB,WACrB,IAAMC,EAAUL,OAAOC,SAASC,KAAKC,UAAU,GAC/CV,EAAcY,EAClB,EAIA,OAFAL,OAAOM,iBAAiB,aAAcF,GAE/B,WACHJ,OAAOO,oBAAoB,aAAcH,EAC7C,CACJ,GAAG,IAaH,OACII,IAAAA,cAAA,OAAKC,UAAU,8CACXD,IAAAA,cAAA,OAAKC,UAAU,kBACXD,IAAAA,cAAA,OAAKC,UAAU,gDACXD,IAAAA,cAAA,KAAGC,UAAU,eAAeC,KAAK,SAAQ,iBACzCF,IAAAA,cAAA,UAChBC,UAAU,+BACVE,KAAK,SACL,gBAAc,YACd,iBAAgBf,EAChB,aAAW,oBACXgB,QAAS,kBAAMf,GAAgBD,EAAY,GAE3CY,IAAAA,cAAA,QAAMC,UAAU,iBACZD,IAAAA,cAAA,QAAMC,UAAU,sBAIJD,IAAAA,cAAA,OAAKC,UAAS,iDAAAI,OAAmDjB,EAAc,GAAK,QAAUkB,GAAG,aAC7FN,IAAAA,cAAA,MAAIC,UAAU,cACTM,EACIC,QAAO,SAAAC,GAAI,MAAkB,cAAdA,EAAKN,IAAoB,IACxCO,KAAI,SAAAD,GAAI,OACLT,IAAAA,cAAA,MAAIC,UAAS,gBAAmBU,IAAKF,EAAKH,IACtCN,IAAAA,cAAA,KACIC,UAAS,YAAAI,OAAcI,EAAKH,KAAOtB,EAAa,SAAW,IAC3DkB,KAAI,IAAAG,OAAMI,EAAKH,IACfF,QAAS,SAACQ,GAAC,OAtC1B,SAACA,EAAqBC,GAC3CD,EAAEE,iBACFzB,GAAe,GACf,IAAM0B,EAAgBC,SAASC,eAAeJ,GAC1CE,IACAA,EAAcG,eAAe,CAAEC,SAAU,WACzC3B,OAAOC,SAASC,KAAOmB,GAE3B5B,EAAc4B,EAClB,CA6BwDO,CAAiBR,EAAGH,EAAKH,GAAG,GAE3CG,EAAKH,IAET,QASzC,E","sources":["pages/_NavBar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport pages from './_PagesConfig.json';\r\nimport '../index.css';\r\nimport 'hamburgers/dist/hamburgers.min.css';\r\n\r\n\r\nconst Navbar: React.FC = () => {\r\n    const [activePage, setActivePage] = useState(\"\");\r\n    const [isCollapsed, setIsCollapsed] = useState(true); // Added state to control navbar collapse\r\n\r\n    useEffect(() => {\r\n        const currentHash = window.location.hash.substring(1);\r\n        setActivePage(currentHash || \"home\");\r\n\r\n        const handleHashChange = () => {\r\n            const newHash = window.location.hash.substring(1);\r\n            setActivePage(newHash);\r\n        };\r\n\r\n        window.addEventListener('hashchange', handleHashChange);\r\n\r\n        return () => {\r\n            window.removeEventListener('hashchange', handleHashChange);\r\n        };\r\n    }, []);\r\n\r\n    const handleNavigation = (e: React.MouseEvent, pageId: string) => {\r\n        e.preventDefault();\r\n        setIsCollapsed(true); // Collapse the navbar when a link is clicked\r\n        const targetSection = document.getElementById(pageId);\r\n        if (targetSection) {\r\n            targetSection.scrollIntoView({ behavior: 'smooth' });\r\n            window.location.hash = pageId;\r\n        }\r\n        setActivePage(pageId);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid custom-navbar-bg shadow-sm\">\r\n            <div className=\"container py-2\">\r\n                <nav className=\"navbar navbar-expand-lg justify-content-left\">\r\n                    <a className=\"navbar-brand\" href=\"#Home\">Anthony Lloyd</a>\r\n                    <button \r\n    className=\"hamburger hamburger--squeeze\" \r\n    type=\"button\" \r\n    aria-controls=\"navbarNav\" \r\n    aria-expanded={!isCollapsed} \r\n    aria-label=\"Toggle navigation\"\r\n    onClick={() => setIsCollapsed(!isCollapsed)} // Toggle the collapsed state\r\n>\r\n    <span className=\"hamburger-box\">\r\n        <span className=\"hamburger-inner\"></span>\r\n    </span>\r\n</button>\r\n\r\n                    <div className={`collapse navbar-collapse justify-content-left ${isCollapsed ? '' : 'show'}`} id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            {pages\r\n                                .filter(page => page.type !== \"component\")\r\n                                .map(page => (\r\n                                    <li className={`nav-item px-2`} key={page.id}>\r\n                                        <a \r\n                                            className={`nav-link ${page.id === activePage ? 'active' : ''}`}\r\n                                            href={`#${page.id}`} \r\n                                            onClick={(e) => handleNavigation(e, page.id)}\r\n                                        >\r\n                                            {page.id}\r\n                                        </a>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","activePage","setActivePage","_useState3","_useState4","isCollapsed","setIsCollapsed","useEffect","currentHash","window","location","hash","substring","handleHashChange","newHash","addEventListener","removeEventListener","React","className","href","type","onClick","concat","id","pages","filter","page","map","key","e","pageId","preventDefault","targetSection","document","getElementById","scrollIntoView","behavior","handleNavigation"],"sourceRoot":""}